[{"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/index.tsx":"1","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/reportWebVitals.ts":"2","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/serviceWorkerRegistration.ts":"3","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/App.tsx":"4","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/Header.tsx":"5","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/Total.tsx":"6","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/Categories.tsx":"7","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/CategiriesData.tsx":"8","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/Context.tsx":"9","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/main.tsx":"10","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/Questions.tsx":"11"},{"size":816,"mtime":1611739230617,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1611738491523,"results":"14","hashOfConfig":"13"},{"size":5256,"mtime":1611738491523,"results":"15","hashOfConfig":"13"},{"size":351,"mtime":1612038523267,"results":"16","hashOfConfig":"13"},{"size":330,"mtime":1612037180326,"results":"17","hashOfConfig":"13"},{"size":384,"mtime":1612002667451,"results":"18","hashOfConfig":"13"},{"size":1478,"mtime":1612037245700,"results":"19","hashOfConfig":"13"},{"size":682,"mtime":1612016740639,"results":"20","hashOfConfig":"13"},{"size":2036,"mtime":1612038678220,"results":"21","hashOfConfig":"13"},{"size":603,"mtime":1612038849254,"results":"22","hashOfConfig":"13"},{"size":501,"mtime":1612039663142,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"14pvp18",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/index.tsx",[],["48","49"],"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/reportWebVitals.ts",[],"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/serviceWorkerRegistration.ts",[],"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/App.tsx",[],"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/Header.tsx",[],"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/Total.tsx",[],"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/Categories.tsx",[],"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/CategiriesData.tsx",[],"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/Context.tsx",["50","51","52"],"import React, { createContext, useState } from 'react'\nimport axios from 'axios';\n\nexport interface IPost {\n    category:string,\n    correct_answer:string,\n    difficulty:string,\n    incorrect_answers:string[],\n    question:string,\n    type:string,\n    \n    \n\n  }\n  const defaultProps:IPost[] = [];\n\nexport interface ContextDatatype\n{\n    start: boolean,\n    setStart: React.Dispatch<React.SetStateAction<boolean>>,\n    category:string,\n    setcategory:React.Dispatch<React.SetStateAction<string>>,\n    posts:IPost[],\n    num:number,\n    setNum:React.Dispatch<React.SetStateAction<number>>,\n    header:string,\n    setHeader:React.Dispatch<React.SetStateAction<string>>,\n    \n\n\n\n\n\n\n}\nlet data:ContextDatatype=\n{\n    start:false,\n    setStart:(Total: React.SetStateAction<boolean>) => null,\n    category:\"a\",\n    setcategory:(Total: React.SetStateAction<string>) => null,\n    posts:[],\n    num:0,\n    setNum:(Total: React.SetStateAction<number>) => null,\n    header:\"Quiz App\",\n    setHeader:(Total: React.SetStateAction<string>) => null,\n\n\n\n}\nexport const Cotext= createContext<ContextDatatype>(data)\n\nexport const Context:React.FC = ({children}) => {\n    const [posts, setPosts]: [IPost[], (posts: IPost[]) => void] = React.useState(defaultProps);\n    const [Data,SetData]=useState<{response_code:number, results:[]}>()\n    const [loading, setLoading]: [boolean, (loading: boolean) => void] = React.useState<boolean>(true);\n    const [start,setStart]=useState<boolean>(false)\n    const [category,setcategory]= useState<string>(\"a\")\n    const [num,setNum]=useState<number>(0)\n    const [header,setHeader]=useState<string>(\"Quiz App\")\n    React.useEffect(() => {\n        axios.get(`https://opentdb.com/api.php?amount=10&category=${category}&type=multiple`)\n        .then(response => {setPosts(response.data.results) ; setLoading(false)});\n      },[category]);\n    return (\n        <Cotext.Provider value={{start,setStart,setcategory,category,posts,setNum,num,setHeader,header}}>\n            {children}\n        </Cotext.Provider>\n    )\n}\n\n","/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/main.tsx",[],"/home/saoudkhan/Desktop/TypeScript/pwa-quiz-ts/src/Components/Questions.tsx",["53","54","55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":55,"column":12,"nodeType":"63","messageId":"64","endLine":55,"endColumn":16},{"ruleId":"61","severity":1,"message":"65","line":55,"column":17,"nodeType":"63","messageId":"64","endLine":55,"endColumn":24},{"ruleId":"61","severity":1,"message":"66","line":56,"column":12,"nodeType":"63","messageId":"64","endLine":56,"endColumn":19},{"ruleId":"61","severity":1,"message":"67","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"69","line":11,"column":56,"nodeType":"70","messageId":"71","endLine":11,"endColumn":58},{"ruleId":"72","severity":2,"message":"73","line":11,"column":59,"nodeType":"74","messageId":"75","endLine":11,"endColumn":105},{"ruleId":"76","severity":1,"message":"77","line":11,"column":62,"nodeType":"78","messageId":"79","endLine":11,"endColumn":64},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'Data' is assigned a value but never used.","Identifier","unusedVar","'SetData' is assigned a value but never used.","'loading' is assigned a value but never used.","'log' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]